{"interfaces": [{"name": "BasicConfig", "description": "Contains basic configuration options for the cosmograph.", "properties": [{"name": "disableSimulation", "type": "boolean | null", "description": "Do not run the simulation, just render the graph. Defaults to true if null and no links are present in the data.", "optional": true, "default": "null"}, {"name": "rectangularSelectorClassName", "type": "string", "description": "Specifies the CSS class to use for the rectangular selector.", "optional": true}]}, {"name": "CallbackConfig", "description": "Defines callback functions for various events in the graph rendering process.", "properties": [{"name": "onPointsFiltered", "type": "(filteredPoints: CosmographData) => void", "description": "Callback function triggered when points are filtered by point crossfilter.", "optional": true}, {"name": "onLinksFiltered", "type": "(filteredLinks: CosmographData) => void", "description": "Callback function triggered when links are filtered by link crossfilter.", "optional": true}, {"name": "onLabelClick", "type": "(index: number, id: string, event: MouseEvent) => void", "description": "Callback function triggered when a label is clicked.", "optional": true}, {"name": "onDataUpdated", "type": "({pointsCount, linksCount, pointsSummary, linksSummary}: { pointsCount: number; linksCount: number; pointsSummary?: Record<string, unknown>[]; linksSummary?: Record<string, unknown>[]; }) => void", "description": "Callback function executed after the graph renders with new data.", "optional": true}, {"name": "onAreaSelected", "type": "([[number, number], [number, number]] | null) => void", "description": "Callback function triggered when an area selection is performed or cleared.", "optional": true}]}, {"name": "CosmographConfig", "description": "Comprehensive configuration interface extending multiple configurations for graph rendering.", "properties": [{"name": "disableSimulation", "type": "boolean | null", "description": "Do not run the simulation, just render the graph. Uses x and y values for position unless null.", "optional": true, "default": "null"}, {"name": "showTopLabelsLimit", "type": "number", "description": "Limit for the number of top labels to show.", "optional": false, "default": "100"}, {"name": "showHoveredPointLabel", "type": "boolean", "description": "Flag to show a label for the hovered point.", "optional": false, "default": "false"}, {"name": "staticLabelWeight", "type": "number", "description": "Weight for static label.", "optional": false, "default": "0.8"}, {"name": "dynamicLabelWeight", "type": "number", "description": "Weight for dynamic label.", "optional": false, "default": "0.7"}, {"name": "labelMargin", "type": "number", "description": "Margin for labels.", "optional": false, "default": "5"}, {"name": "labelPadding", "type": "object", "description": "Padding for labels in pixels, specified per side.", "optional": false, "properties": [{"name": "left", "type": "number", "description": "Padding on the left side.", "optional": false, "default": "7"}, {"name": "top", "type": "number", "description": "Padding on the top side.", "optional": false, "default": "4"}, {"name": "right", "type": "number", "description": "Padding on the right side.", "optional": false, "default": "7"}, {"name": "bottom", "type": "number", "description": "Padding on the bottom side.", "optional": false, "default": "4"}], "default": {"left": 7, "top": 4, "right": 7, "bottom": 4}}]}]}
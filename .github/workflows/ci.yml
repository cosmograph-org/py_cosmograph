name: Continuous Integration
on: [push, pull_request]
env:
  PROJECT_NAME: cosmograph

jobs:
  validation:
    name: Validation
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10"]

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Dependencies
        uses: i2mint/isee/actions/install-packages@master
        with:
          dependency-files: setup.cfg
          # ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}  # Uncomment this if you need to install private dependencies from source

      - name: Format Source Code
        uses: i2mint/isee/actions/format-source-code@master

      - name: Pylint Validation
        uses: i2mint/isee/actions/pylint-validation@master
        with:
          root-dir: ${{ env.PROJECT_NAME }}
          enable: missing-module-docstring
          ignore: tests,examples,scrap

      - name: Pytest Validation
        uses: i2mint/isee/actions/pytest-validation@master
        with:
          root-dir: ${{ env.PROJECT_NAME }}
          paths-to-ignore: examples,scrap,dev_utils

  windows-validation:
    name: Windows Validation
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    runs-on: windows-latest
    strategy:
      matrix:
        python-version: ["3.10"]

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Package
        run: |
          python -m pip install --upgrade pip
          python -m pip install .
          # If pytest is not already installed through setup.cfg or setup.py requirements,
          # include the line below:
          python -m pip install pytest

      - name: Run Tests
        run: python -m pytest --maxfail=1 --disable-warnings

  publish:
    name: Publish
    if: "contains(github.event.head_commit.message, '[publish]') && (github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main')"
    # if: "!contains(github.event.head_commit.message, '[skip ci]') && (github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main')"
    needs: validation
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10"]
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Format Source Code
        uses: i2mint/isee/actions/format-source-code@master

      - name: Update Version Number
        uses: i2mint/isee/actions/bump-version-number@master

      - name: Package
        uses: i2mint/isee/actions/package@master
        # Uncomment this if you need to install private dependencies from source
        # with:  
          # ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}  

      - name: Publish
        uses: i2mint/isee/actions/publish@master
        with:
          pypi-username: ${{ secrets.PYPI_USERNAME }}
          pypi-password: ${{ secrets.PYPI_PASSWORD }}

      - name: Check In
        uses: i2mint/isee/actions/check-in@master
        with:
          commit-message: "**CI** Formatted code + Updated version number and documentation. [skip ci]"
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Tag Repository With New Version Number
        uses: i2mint/isee/actions/tag-repository@master
        with:
          tag: $VERSION

  github-pages:
    name: Publish GitHub Pages
    if: "contains(github.event.head_commit.message, '[publish]') && (github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main')"
    # if: "!contains(github.event.head_commit.message, '[skip ci]') && (github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main')"
    needs: publish
    runs-on: ubuntu-latest
    steps:
      - uses: i2mint/epythet/actions/publish-github-pages@master
        with:
          # IMPORTANT Note: You don't need to specify GITHUB_TOKEN in your repo secrets.
          # GITHUB_TOKEN is special & automatically provided to your workflow run.
          github-token: ${{ secrets.GITHUB_TOKEN }}
